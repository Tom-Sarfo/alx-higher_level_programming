>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> mat = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(mat, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(mat, 4)
[[0.25, 0.5, 0.75], [1.0, 1.25, 1.5]]
>>> matrix_divided(mat, 0.4)
[[2.5, 5.0, 7.5], [10.0, 12.5, 15.0]]
>>> matrix_divided(mat, 0.2)
[[5.0, 10.0, 15.0], [20.0, 25.0, 30.0]]
>>> matrix_divided(mat, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 45, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix_divided(mat, '5')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 42, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> mat = [
...     (1, 2, 3),
...     [4, 5, 6]
... ]
>>> matrix_divided(mat, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 28, in matrix_divided
    raise TypeError(type_err)
TypeError: matrix must be a matrix (list of lists) of integers/float
